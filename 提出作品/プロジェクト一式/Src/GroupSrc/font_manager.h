//============================================================================
// 
// フォントマネージャー、ヘッダファイル [font_manager.h]
// Author : 福田歩希
// 
//============================================================================

// インクルードガード
#pragma once

//****************************************************
// インクルードファイル
//****************************************************
#include "singleton.hpp"

// コンポジション
#include "register.hpp"

//****************************************************
// フォントマネージャークラスの定義
//****************************************************
class CFont_Manager final : public CSingleton<CFont_Manager>
{
	//****************************************************
	// フレンド宣言
	//****************************************************
	friend struct std::default_delete<CFont_Manager>;
	friend CFont_Manager* CSingleton<CFont_Manager>::GetInstance();

	//****************************************************
	// 静的メンバ変数の定義
	//****************************************************
	static constexpr const char* INITIALIZE_PATH = "Data\\JSON\\INITIALIZE\\Font_Manager.json";

public:

	//****************************************************
	// function
	//****************************************************

	// レジスタの参照の取得
	inline CRegister<LPD3DXFONT>& RefRegister() const { return *m_upRegister; };

private:

	//****************************************************
	// special function
	//****************************************************
	CFont_Manager();			// デフォルトコンストラクタ
	~CFont_Manager() override;	// デストラクタ

	//****************************************************
	// function
	//****************************************************
	bool Initialize();	// 初期化処理
	void Finalize();	// 終了処理

	//****************************************************
	// data
	//****************************************************
	std::unique_ptr<CRegister<LPD3DXFONT>> m_upRegister;	// フォント用レジスタ
};