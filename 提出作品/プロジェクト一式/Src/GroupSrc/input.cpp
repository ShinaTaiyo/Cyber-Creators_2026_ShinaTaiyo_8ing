//============================================================================
// 
// 入力処理管理 [input.cpp]
// Author : 福田歩希
// 
//============================================================================

//****************************************************
// インクルードファイル
//****************************************************
#include "input.h"

//****************************************************
// 静的メンバの初期化
//****************************************************
LPDIRECTINPUT8 CInput::m_Input = nullptr;	// DirectInputオブジェクト

//============================================================================
// 
// publicメンバ
// 
//============================================================================

//============================================================================
// コンストラクタ
//============================================================================
CInput::CInput() :
	m_pDevice{ nullptr }
{

}

//============================================================================
// デストラクタ
//============================================================================
CInput::~CInput()
{

}

//============================================================================
// 初期設定
//============================================================================
HRESULT CInput::Init(HINSTANCE hInstance, HWND hWnd)
{
	if (m_Input == nullptr)
	{
		// DirectInputオブジェクトの生成
		if (FAILED(DirectInput8Create(hInstance, DIRECTINPUT_VERSION, IID_IDirectInput8, reinterpret_cast<void**>(&m_Input), nullptr)))
		{
			return E_FAIL;
		}
	}

	return S_OK;
}

//============================================================================
// 終了処理
//============================================================================
void CInput::Uninit()
{
	// 入力デバイスの破棄
	if (m_pDevice != nullptr)
	{
		m_pDevice->Unacquire();
		m_pDevice->Release();
		m_pDevice = nullptr;
	}

	// DirectInputオブジェクトの破棄
	if (m_Input != nullptr)
	{
		m_Input->Release();
		m_Input = nullptr;
	}
}