//============================================================================
// 
// テクスチャマネージャー、ヘッダファイル [texture_manager.h]
// Author : 福田歩希
// 
//============================================================================

// インクルードガード
#pragma once

//****************************************************
// インクルードファイル
//****************************************************
#include "singleton.hpp"

// コンポジション
#include "registry.tpp"

//****************************************************
// テクスチャマネージャークラスの定義
//****************************************************
class CTexture_Manager final : public CSingleton<CTexture_Manager>
{
	//****************************************************
	// フレンド宣言
	//****************************************************
	friend struct std::default_delete<CTexture_Manager>;
	friend CTexture_Manager* CSingleton<CTexture_Manager>::GetInstance();

	//****************************************************
	// 静的メンバ変数の定義
	//****************************************************
	static constexpr const char* INITIALIZE_PATH = "Data\\JSON\\INITIALIZE\\Texture_Manager.json";

public:

	//****************************************************
	// function
	//****************************************************

	// レジストリの参照の取得
	inline CRegistry<LPDIRECT3DTEXTURE9>& RefRegistry() const { return *m_upRegistry; }

private:

	//****************************************************
	// special function
	//****************************************************
	CTexture_Manager();				// デフォルトコンストラクタ
	~CTexture_Manager() override;	// デストラクタ

	//****************************************************
	// function
	//****************************************************
	bool Initialize();	// 初期化処理
	void Finalize();	// 終了処理

	//****************************************************
	// data
	//****************************************************
	std::unique_ptr<CRegistry<LPDIRECT3DTEXTURE9>> m_upRegistry;	// テクスチャ用レジストリ
};