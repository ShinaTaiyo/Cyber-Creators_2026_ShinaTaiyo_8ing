//============================================================================
// 
// ２０２５年７月９日：３次元ベクトル指数減衰クラスを作成 [Vec3ExponertialInfo.cpp]
// Author : 椎名太陽
// 
//============================================================================

//****************************************************
// インクルードファイル
//****************************************************
#include "Vec3ExponertialInfo.h"

//****************************************************
// usingディレクティブ
//****************************************************
using namespace useful;

//============================================================================
// コンストラクタ
//============================================================================
CVec3ExponertialInfo::CVec3ExponertialInfo() : 
	m_fExpDecayRate{ s_fNormalExpDecayRate },
	m_Target{VEC3_INIT},
	m_bUse{false}
{
	// 何もなし
}

//============================================================================
// デストラクタ
//============================================================================
CVec3ExponertialInfo::~CVec3ExponertialInfo()
{
	// 何もなし
}

//============================================================================
// 更新処理
//============================================================================
void CVec3ExponertialInfo::Update(D3DXVECTOR3& Self, CObject* pObj)
{
	// 使用するなら指数減衰をする
	if (m_bUse)
	{
		// 目標値へのベクトル
		D3DXVECTOR3 VecToTarget = m_Target - Self;

		// 目標値へのベクトルの長さが一定以下なら使用状態をオフにし目標値に設定する
		if (D3DXVec3Length(&VecToTarget) < s_fCompleteDistance)
		{
			m_bUse = false;
			Self = m_Target;
			return;
		}
		Self += (m_Target - Self) * m_fExpDecayRate;
	}
}

//============================================================================
// 初期設定
//============================================================================
void CVec3ExponertialInfo::SetInitialize(float fExpDecayRate, D3DXVECTOR3 Target)
{
	m_fExpDecayRate = fExpDecayRate; // 指数減衰倍率
	m_Target = Target; // 目標値
	m_bUse = true; // 使用する
}

//============================================================================
// 目標値取得
//============================================================================
const D3DXVECTOR3& CVec3ExponertialInfo::GetTarget() const
{
	return m_Target;
}

//============================================================================
// 目標値設定
//============================================================================
void CVec3ExponertialInfo::SetTarget(D3DXVECTOR3 Target)
{
	m_Target = Target;
}

//============================================================================
// 使用するかどうか取得
//============================================================================
const bool& CVec3ExponertialInfo::GetUse() const
{
	return m_bUse;
}

//============================================================================
// 使用するかどうか設定
//============================================================================
void CVec3ExponertialInfo::Setuse(bool bUse)
{
	m_bUse = bUse;
}
