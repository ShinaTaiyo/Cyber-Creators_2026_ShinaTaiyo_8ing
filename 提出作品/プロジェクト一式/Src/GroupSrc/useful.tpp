//============================================================================
// 
// ユースフル、定義用ファイル [useful.tpp]
// Author : 福田歩希
// 
//============================================================================

// インクルードガード
#pragma once

//****************************************************
// インクルードファイル
//****************************************************
#include "useful.hpp"

//============================================================================
// 汎用生成
//============================================================================
template <typename T> T* useful::Create()
{
	T* p = DBG_NEW T();

	if (!p->Initialize())
	{
		Release(p);
	}

	return p;
}

//============================================================================
// 汎用生成 - ユニークポインタ
//============================================================================
template <typename T> useful::up<T> useful::CreateUniquePtr()
{
	up<T> up = make_unique<T>();

	if (!up->Initialize())
	{
		up->Finalize();
		up.reset();
	}

	return up;
}

//============================================================================
// 汎用解放
//============================================================================
template <typename T> void useful::Release(T*& p)
{
	if (p)
	{
		p->Release();
		p = nullptr;
	}
}

//============================================================================
// up交換
//============================================================================
template <typename T, typename U> void useful::ChangeUniquePtr(up<T>& uptr)
{
	if (uptr)
	{
		uptr.reset();
	}

	if (!uptr)
	{
		uptr = make_unique<U>();
	}
}

//============================================================================
// Yaw回転
//============================================================================
template <typename T> void useful::RotateYawAxis(T& base, float coef)
{
	Vec3 Rot = base.GetRot();
	Rot.y += coef;
	base.SetRot(Rot);
}

//============================================================================
// Yaw目標回転
//============================================================================
template <typename T> void useful::RotateTargetYawAxis(T& base, float coef)
{
	Vec3 RotTarget = base.GetRotTarget();
	RotTarget.y += coef;
	base.SetRotTarget(RotTarget);
}